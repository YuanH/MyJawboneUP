html() %>%
html_nodes(".info") %>%
.[[1]] %>%
html_table(fill = T)
data[[1]]
html_table(data)
html_table(data[[1]])
data[[1]]
data[[1]]
html_text(data[[1]])
html_attr(data[[1]],name = "dt")
html_attr(data[[1]],name = "dl")
html_attr(data[[1]],name = "dd")
html_tag(data[[1]])
?html_tag
test <- html_text(data)
test
class(test)
test[1]
test <- gsub(test,pattern = "\t | \n | \r", replacement = "")
test
test <- gsub(test,pattern = "\t"|"\n", replacement = "")
test <- gsub(test,pattern = "\t", replacement = "")
test
test <- gsub(test,pattern = "\n", replacement = "")
test <- gsub(test,pattern = "\r", replacement = "")
test
test <- data.frame(test)
test
View(test)
test.data <- data.frame(data)
data[[1]]
data2 <- url %>%
html() %>%
html_nodes("dd , dt , .info h2")
data2[[900]]
data2[[1]]
data2[[2]]
data2[[3]]
data2[[4]]
data2[[9]]
data2[[10]]
data2 <- url %>%
html() %>%
html_nodes("dd , .info h2")
data2[[1]]
data2[[2]]
data2[[3]]
data2[[4]]
html_table(data2)
html_tag(data2)
html_text(data2)
html_text(data2[[1]])
data2[[html_tag(data2)=="h2"]]
data2[html_tag(data2)=="h2"]
html_text(data2[html_tag(data2)=="h2"])
data2 <- url %>%
html() %>%
html_nodes(".info dd , .info h2")
data2[[1]]
data2[[2]]
data2[[3]]
html_tag(data2)
Name <- html_text(data2[html_tag(data2)=="h2"])
data2.dd <- html_text(data2[html_tag(data2)=="dd"])
data2.dd[1:10]
for (k in 1:400) {
Height_Weight <- data2.dd[3+4(k-1)]
}
Height_Weight
for (k in 1:100) {
Height_Weight <- data2.dd[3+4(k-1)]
}
Height_Weight<-NULL
for (k in 1:100) {
Height_Weight[k] <- data2.dd[3+4(k-1)]
}
tail(data2.dd)
data2.dd[99*4+3]
for (k in 1:100) {
Height_Weight <- c(Height_Weight,data2.dd[3+4*(k-1)])
}
Height_Weight
strsplit(Height_Weight,"/")
Height_Weight <- data.frame(strsplit(Height_Weight,"/"))
View(Height_Weight)
Height_Weight<-NULL
for (k in 1:100) {
Height_Weight <- c(Height_Weight,data2.dd[3+4*(k-1)])
}
Height_Weight <- data.frame(do.call('rbind', strsplit(as.character(Height_Weight),'/',fixed=TRUE)))
View(Height_Weight)
Height <- data.frame(do.call('rbind', strsplit(as.character(Height_Weight$X1),'(',fixed=TRUE)))
View(Height)
Height$X2 <- gsub(Height$X2, pattern = ' cm)',replacement = "")
View(Height)
Height <- data.frame(do.call('rbind', strsplit(as.character(Height_Weight$X1),'(',fixed=TRUE)))
View(Height)
substr(Height$X2,1,3)
Height$X2 <- substr(Height$X2,1,3)
colnames(Height) <- c("Height_Feet_Inches","Height_cm")
View(Height)
View(Height_Weight)
class(Height$Height_cm)
as.numeric(Height$Height_cm)
Height <- data.frame(do.call('rbind', strsplit(as.character(Height_Weight$X1),'(',fixed=TRUE)))
Height$X2 <- as.numeric(substr(Height$X2,1,3))
colnames(Height) <- c("Height_Feet_Inches","Height_cm")
View(Height)
Weight <- data.frame(do.call('rbind', strsplit(as.character(Height_Weight$X2),'(',fixed=TRUE)))
View(Weight)
as.numeric(substr(Weight$X1,1,3))
as.numeric(substr(Weight$X1,1,4))
Weight$X1 <- as.numeric(substr(Weight$X1,1,4))
as.numeric(substr(Weight$X2,1,3))
Weight$X2 <- as.numeric(substr(Weight$X2,1,3))
colnames(Weight) <- c("Weight_lbs","Weight_kg")
ATP_Tennis_Men <- data.frame(Name, Height, Weight)
View(ATP_Tennis_Men)
Name <- data.frame(do.call('rbind', strsplit(as.character(Name),'.',fixed=TRUE)))
View(Name)
Name$X1 <- as.numeric(Name$X1)
View(Name)
Name <- html_text(data2[html_tag(data2)=="h2"])
Name <- data.frame(do.call('rbind', strsplit(as.character(Name),'.',fixed=TRUE)))
as.numeric(Name$X2)
Name$X2
colnames(Name) <- c("Rank","Name")
ATP_Tennis_Men <- data.frame(Name, Height, Weight)
View(ATP_Tennis_Men)
require(ggplot2)
qplot(data = ATP_Tennis_Men, x = Height_cm, y = Weight_lbs)
summary(ATP_Tennis_Men$Height_cm)
summary(ATP_Tennis_Men$Weight_lbs)
summary(ATP_Tennis_Men$Weight_kg)
qplot(Height_cm, data=ATP_Tennis_Men, geom="freqpoly")
qplot(Height_cm, data=ATP_Tennis_Men, geom="bar")
qplot(Weight_lbs, data=ATP_Tennis_Men, geom="bar")
g <- ggplot(ATP_Tennis_Men)
g + geom_histogram(aes(x = Weight_lbs))
g + geom_histogram(aes(x = Weight_lbs),binwidth = 1)
g + geom_histogram(aes(x = Weight_lbs),binwidth = 1) + scale_x_continuous()
g + geom_histogram(aes(x = Weight_lbs),binwidth = 1) + scale_x_continuous(,10)
g + geom_histogram(aes(x = Weight_lbs),binwidth = 1) + scale_x_continuous(10)
g + geom_histogram(aes(x = Weight_lbs),binwidth = 1) +geom_text()
g + geom_histogram(aes(x = Weight_lbs),binwidth = 1) +geom_text(data = count(Weight_lbs))
g + geom_histogram(aes(x = Weight_lbs),binwidth = 1) +geom_text(data = count(Weight$Weight_lbs))
g + geom_histogram(aes(x = Weight_lbs),binwidth = 1) +geom_text(label = Weight_lbs)
g + geom_histogram(aes(x = Weight_lbs),binwidth = 1)
g
g + geom_point(aes(x = Weight_lbs, y = Height_cm, label = Name))
g + geom_point(aes(y = Weight_lbs, x = Height_cm, label = Name))
g + geom_point(aes(y = Weight_lbs, x = Height_cm, label = Name)) + geom_text()
g + geom_point(aes(y = Weight_lbs, x = Height_cm)) + geom_text()
g + geom_point(aes(y = Weight_lbs, x = Height_cm))
g + geom_point(aes(y = Weight_lbs, x = Height_cm, color = Rank))
class(ATP_Tennis_Men$Rank)
g + geom_point(aes(y = Weight_lbs, x = Height_cm, color = as.numeric(Rank)))
g_10 <- ggplot(ATP_Tennis_Men[1:10])
ATP_Tennis_Men[1:10]
g_10 <- ggplot(ATP_Tennis_Men[1:10,])
g_10 + geom_point(aes(y = Weight_lbs, x = Height_cm, color = as.numeric(Rank)))
g_10 + geom_point(aes(y = Weight_lbs, x = Height_cm, label = Name))
g + geom_point(aes(y = Weight_lbs, x = Height_cm, color = as.numeric(Rank)))
g + geom_point(aes(y = Weight_lbs, x = Height_cm, color = as.numeric(Rank)))
g + geom_histogram(aes(x = Weight_lbs),binwidth = 1)
g + geom_histogram(aes(x = Weight_lbs, color = as.numeric(Rank)),binwidth = 1)
g + geom_histogram(aes(x = Weight_lbs),binwidth = 1)
g + geom_histogram(aes(x = Height_cm),binwidth = 1)
g + geom_density(aes(x = Height_cm),binwidth = 1)
g + geom_density(aes(x = Height_cm),fill = "grey50")
g + geom_density(aes(x = Weight_lbs),fill = "grey50")
g + geom_density(aes(x = Height_cm),fill = "grey50")
g + geom_histogram(aes(x = Weight_lbs),binwidth = 1)
g + geom_histogram(aes(x = Height_cm),binwidth = 1)
with(ATP_Tennis_Men,ATP_Tennis_Men[Height_cm>=180 & Height_cm<=190]
)
filter(ATP_Tennis_Men,Height_cm>=180 & Height_cm<=190)
dim(filter(ATP_Tennis_Men,Height_cm>=180 & Height_cm<=190))
url2 <- "http://www.foxsports.com/tennis/players?organizationID=2&season=2015&page=1&sort=1&sequence=0"
data3 <- url2 %>%
html() %>%
html_nodes("td , .wisfb_fullPlayerStacked")
url2 <- "https://en.wikipedia.org/wiki/ATP_Rankings"
data3 <- url2 %>%
html() %>%
html_nodes(".jquery-tablesorter")
html_nodes(".jquery-tablesorter :nth-child(2)")
data3 <- url2 %>%
html() %>%
html_nodes(".jquery-tablesorter :nth-child(2)")
data3 <- url2 %>%
html() %>%
html_nodes(".jquery-tablesorter")
data3
html_text(data3)
data3 <- url2 %>%
html() %>%
html_nodes(".jquery-tablesorter td")
url2 <- "https://en.wikipedia.org/wiki/List_of_ATP_number_1_ranked_singles_players"
data3 <- url2 %>%
html() %>%
html_nodes("table:nth-child(23) td:nth-child(1) :nth-child(1)")
data3[[1]]
data3 <- url2 %>%
html() %>%
html_nodes("table:nth-child(23) td:nth-child(1) :nth-child(1)") %>%
.[[1]]%>%
html_table()
View(data3)
data3 <- url2 %>%
html() %>%
html_nodes("table:nth-child(23) td:nth-child(1) :nth-child(1)") %>%
.[[1]]
html_tag(data3)
html_attr(data3)
html_attr(data3,name = "href")
data3
data3 <- url2 %>%
html() %>%
html_nodes("table:nth-child(23) td:nth-child(1) :nth-child(1)") %>%
.[[1]] %>%
html_table()
data4 <- url2 %>%
html() %>%
html_nodes("table:nth-child(23) td:nth-child(1) :nth-child(1)") %>%
.[[1]]
class(data4)
html_text(data4)
url3 <- "https://en.wikipedia.org/wiki/Roger_Federer"
data4 <- url3 %>%
html() %>%
html_nodes(".vcard")
data4
data4 <- url3 %>%
html() %>%
html_nodes(".vcard") %>%
html_table()
data4 <- url3 %>%
html() %>%
html_nodes(".vcard") %>%
.[[1]] %>%
html_table()
data4 <- url3 %>%
html() %>%
html_nodes(".vcard") %>%
.[[1]] %>%
html_table(fill = T)
View(data4)
Player_Name <- data.frame(do.call('rbind', strsplit(as.character(data3),' ',fixed=TRUE)))
Player_Name <- data.frame(do.call('rbind', strsplit(as.character(data3$Player),' ',fixed=TRUE)))
Player_Name <- data.frame(do.call('rbind', strsplit(as.character(data3$Player),',',fixed=TRUE)))
View(Player_Name)
Player_Name <- strsplit(data3$Player," ")
rbind(Player_Name)
rbind.data.frame(Player_Name)
do.call(rbind.data.frame,Player_Name)
Player_Name <- do.call(rbind.data.frame,Player_Name)
View(Player_Name)
Player_Name <- strsplit(data3$Player," ")
Player_Name <- strsplit(data3$Player,",")
Player_Name[[1]]
Player_Name[[1]][1]
rbind.data.frame(Player_Name)
test<-rbind.data.frame(Player_Name)
View(test)
Player_Name <- data.frame(do.call('rbind', strsplit(as.character(data3$Player),',',fixed=TRUE)))
Player_Name2 <- data.frame(do.call('rbind', strsplit(as.character(Player_Name$X2),' ',fixed=TRUE))
)
View(Player_Name2)
url4 <- "https://www.redfin.com/zipcode/94531"
antioch <- url4 %>%
html() %>%
html_nodes(".right , .left") %>%
.[[1]] %>%
html_table()
antioch <- url4 %>%
html() %>%
html_nodes(".right , .left") %>%
.[[1]]
antioch <- url4 %>%
html() %>%
html_nodes(".right , .left")
antioch[[1]]
antioch[[2]]
antioch[[3]]
antioch[[4]]
antioch[[5]]
antioch[[6]]
for (i in 1:20) {
antioch[[i]]
}
for (i in 1:20) {
print(antioch[[i]])
}
for (i in 1:20) {
print(html_text(antioch[[i]]))
}
for (i in 1:50) {
print(html_text(antioch[[i]]))
}
antioch <- url4 %>%
html() %>%
html_nodes(".right")
antioch <- url4 %>%
html() %>%
html_nodes(".right") %>%
html_table()
antioch <- url4 %>%
html() %>%
html_nodes(".right") %>%
.[[1]] %>%
html_table()
antioch[[1]]
antioch[[2]]
antioch[[5]]
antioch[[6]]
antioch[[7]]
antioch[[8]]
antioch[[9]]
antioch[[10]]
choose(5,4)
(choose(5,4)+choose(5,5))*.5^5
0.5^5
0.5^5
0.5^5*(choose(5,4)+choose(5,5))
choose(2,0)
0.85^2
ppois(10, lambda = 5 * 3)
sample(0:1)
sample(0:1,1000,replace = T)
means <- cumsum(sample(0:1,1000,replace = T))/(1:1000)
plot(means)
getwd()
saveRDS(antioch,"antioch.rds")
save(antioch,"antioch.rda")
save(antioch,"antioch.RDA")
save(antioch,"antioch.Rda")
save(antioch,file = "antioch.Rda")
save(antioch,file = "antioch.rdata")
read.csv("Salaries.csv")
Salaries <- read.csv("Salaries.csv")
save(Salaries,file = "Salaries.Rda")
source('~/Documents/Github/Health Data/readGoogleSheet.R')
url <- "https://docs.google.com/spreadsheets/d/1tN9t7Npu120wuuSzBvCimSnEzxEpwFb0XkFb0JoiP-Q/edit?usp=sharing"
r <- GET(url)
html <- content(r)
sheets <- readHTMLTable(html, header=FALSE, stringsAsFactors=FALSE)
df <- sheets[[sheet]]
df <- sheets[[1]]
View(df)
dfClean(df)
dfClean <- function(df){
nms <- t(df[1,])
names(df) <- nms
df <- df[-1,-1]
row.names(df) <- seq(1,nrow(df))
df
}
dfClean(df)
url
source('~/Documents/health/Untitled.R')
source('~/Documents/MyJawboneUP/GoogleDump.R')
download.file(url = activity_url, "acitivity.csv")
source('~/.active-rstudio-document')
source('~/Documents/MyJawboneUP/GoogleDump.R')
activity <- activity_url %>%
html() %>%
html_nodes("td") %>%
.[[1]] %>%
html_table()
activity <- activity_url %>%
html() %>%
html_nodes("td") %>%
.[[1]]
activity <- activity_url %>%
html()
activity <- activity_url %>%
html() %>%
html_nodes("td") %>%
.[[1]] %>%
html_table()
test <- html_nodes(activity_url,"td")
test <- html_nodes(activity_url,".td")
activity
activity <- activity_url %>%
html() %>%
html_nodes("#doc-title , .s0 , .s2")
activity <- activity_url %>%
html() %>%
html_nodes("#doc-title , .s0 , .s2") %>%
.[[1]] %>%
html_table()
activity <- activity_url %>%
html() %>%
html_nodes("#doc-title , .s0 , .s2") %>%
.[[1]]
activity <- activity_url %>%
html() %>%
html_nodes("#doc-title , .s0 , .s2")
head(activity)
activity <- activity_url %>%
html() %>%
html_nodes("#doc-title , .s0 , .s2") %>%
html_table()
activity <- activity_url %>%
html() %>%
html_nodes("#doc-title , .s0 , .s2") %>%
html_text()
head(activity)
activity[1:100]
activity <- activity_url %>%
html() %>%
html_table()
activity[1:10]
activity[1]
activity[1]
test <- data.frame(activity[1])
View(test)
test <- data.frame(activity[1], row.names = F, header = T)
test <- data.frame(activity[1], row.names = F)
test <- data.frame(activity[1], header=T)
View(test)
activity <- activity_url %>%
html() %>%
html_table() %>%
.[[1]] %>%
data.frame()
View(activity)
colnames(activity) <- activity[1,]
View(activity)
activity <- activity_url %>%
html() %>%
html_table() %>%
.[[1]] %>%
as.data.frame()
View(activity)
colnames(activity)
colnames(activity) <- activity[1,]
colnames(activity)
activity <- activity_url %>%
html() %>%
html_table() %>%
.[[1]] %>%
as.data.frame(header = T)
View(activity)
activity <- activity_url %>%
html() %>%
html_table() %>%
.[[1]] %>%
data.frame()
colnames(activity) <- activity[1,]
activity[2:]
activity[2:,]
activity[2:-1,]
activity[2,]
activity[-c(1),]
activity <- activity[-c(1),]
View(activity)
activity <- activity[-c(1),-c(1,2)]
View(activity)
source('~/Documents/MyJawboneUP/GoogleDump.R')
View(activity)
View(sleep)
source('~/Documents/MyJawboneUP/GoogleDump.R')
View(activity)
source('~/Documents/MyJawboneUP/GoogleDump.R')
source('~/Documents/MyJawboneUP/GoogleDump.R')
source('~/Documents/MyJawboneUP/GoogleDump.R')
colnames(activity)
source('~/Documents/MyJawboneUP/GoogleDump.R')
View(activity)
colnames(activity)
source('~/Documents/MyJawboneUP/GoogleDump.R')
source('~/Documents/MyJawboneUP/GoogleDump.R')
activity$Date <- mdy(activity$DateOfActivity)
library(lubridate)
activity$Date <- mdy(activity$DateOfActivity)
View(activity)
View(sleep)
sleep$Date <- mdy(sleep$AwokeAt)
mdy("August 05, 2014 at 01:09AM")
guess_formats("August 05, 2014 at 01:09AM",'Mdy')
guess_formats("August 05, 2014 at 01:09AM")
guess_formats("August 05, 2014 at 01:09AM","Mdyhm")
mdy_hms("August 05, 2014 at 01:09AM")
mdy_hm("August 05, 2014 at 01:09AM")
test <- mdy_hm("August 05, 2014 at 01:09AM")
mdy(test)
test
sleep$Date <- mdy_hm(sleep$AwokeAt)
source('~/Documents/MyJawboneUP/GoogleDump.R')
source('~/Documents/MyJawboneUP/GoogleDump.R')
View(sleep)
?rexp
source('~/Documents/MyJawboneUP/GoogleDump.R')
View(activity)
rexp(40, 0.2)
hist(rexp(40,0.2))
hist(runif(1000))
mean(rexp(40,0.2))
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
hist(mns)
mean(mns)
rnorm(n = 10)
cumsum(rnorm(n=10,mean = 1))
rnorm(n = 10, mean =1)
rnorm(n = 10, mean =1) %>% mean
cumsum(rnorm(n=10,mean = 1))/(1:10)
cumsum(rnorm(n=10,mean = 1)) %>% mean
mean(cumsum(rnorm(n=10)))
