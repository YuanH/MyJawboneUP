<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='mac' version='9.0' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 9000.15.0615.1857                                -->
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='acitivity' inline='true' name='stat-direct.42207.944543518500' version='9.0'>
      <connection class='stat-direct' directory='/Users/cityhunter870804/Documents/MyJawboneUP' filename='acitivity.Rda' password='' server=''>
        <relation name='acitivity.Rda' table='[acitivity.Rda]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames]</local-name>
            <parent-name>[acitivity.Rda]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DateOfActivity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DateOfActivity]</local-name>
            <parent-name>[acitivity.Rda]</parent-name>
            <remote-alias>DateOfActivity</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalSteps</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TotalSteps]</local-name>
            <parent-name>[acitivity.Rda]</parent-name>
            <remote-alias>TotalSteps</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DistanceCoveredMI</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DistanceCoveredMI]</local-name>
            <parent-name>[acitivity.Rda]</parent-name>
            <remote-alias>DistanceCoveredMI</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DistanceCoveredKM</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DistanceCoveredKM]</local-name>
            <parent-name>[acitivity.Rda]</parent-name>
            <remote-alias>DistanceCoveredKM</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalCaloriesBurned</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TotalCaloriesBurned]</local-name>
            <parent-name>[acitivity.Rda]</parent-name>
            <remote-alias>TotalCaloriesBurned</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalActiveTime</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TotalActiveTime]</local-name>
            <parent-name>[acitivity.Rda]</parent-name>
            <remote-alias>TotalActiveTime</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalActiveTimeInSeconds</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TotalActiveTimeInSeconds]</local-name>
            <parent-name>[acitivity.Rda]</parent-name>
            <remote-alias>TotalActiveTimeInSeconds</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentTimeActive</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PercentTimeActive]</local-name>
            <parent-name>[acitivity.Rda]</parent-name>
            <remote-alias>PercentTimeActive</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalInactiveTime</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TotalInactiveTime]</local-name>
            <parent-name>[acitivity.Rda]</parent-name>
            <remote-alias>TotalInactiveTime</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalInactiveTimeInSeconds</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TotalInactiveTimeInSeconds]</local-name>
            <parent-name>[acitivity.Rda]</parent-name>
            <remote-alias>TotalInactiveTimeInSeconds</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentTimeInactive</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PercentTimeInactive]</local-name>
            <parent-name>[acitivity.Rda]</parent-name>
            <remote-alias>PercentTimeInactive</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MoveGraphImageURL</remote-name>
            <remote-type>129</remote-type>
            <local-name>[MoveGraphImageURL]</local-name>
            <parent-name>[acitivity.Rda]</parent-name>
            <remote-alias>MoveGraphImageURL</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[acitivity.Rda]</parent-name>
            <remote-alias>Date</remote-alias>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Time Active Percentage' datatype='real' default-format='p0.00%' name='[Calculation_3490722225354213]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='FLOAT(left([PercentTimeActive],FIND([PercentTimeActive],&quot;%&quot;)))' />
      </column>
      <column caption='Time Inactive Percentage' datatype='real' default-format='p0.00%' name='[Calculation_9010722225152575]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='FLOAT(left([PercentTimeInactive],FIND([PercentTimeInactive],&quot;%&quot;)))' />
      </column>
      <column caption='Date Of Activity' datatype='string' name='[DateOfActivity]' role='dimension' type='nominal'>
      </column>
      <column datatype='datetime' name='[Date]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='CountD' caption='Distance Covered KM' datatype='integer' datatype-customized='true' name='[DistanceCoveredKM]' role='measure' type='quantitative'>
      </column>
      <column caption='Distance Covered MI' datatype='integer' datatype-customized='true' name='[DistanceCoveredMI]' role='measure' type='quantitative'>
      </column>
      <column caption='Move Graph Image URL' datatype='string' hidden='true' name='[MoveGraphImageURL]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Percent Time Active' datatype='string' name='[PercentTimeActive]' role='dimension' type='nominal'>
      </column>
      <column caption='Percent Time Inactive' datatype='string' name='[PercentTimeInactive]' role='dimension' type='nominal'>
      </column>
      <column caption='Total Active Time In Seconds' datatype='integer' datatype-customized='true' name='[TotalActiveTimeInSeconds]' role='measure' type='quantitative'>
      </column>
      <column caption='Total Active Time' datatype='string' name='[TotalActiveTime]' role='dimension' type='nominal'>
      </column>
      <column caption='Total Calories Burned' datatype='integer' datatype-customized='true' name='[TotalCaloriesBurned]' role='measure' type='quantitative'>
      </column>
      <column caption='Total Inactive Time In Seconds' datatype='integer' datatype-customized='true' name='[TotalInactiveTimeInSeconds]' role='measure' type='quantitative'>
      </column>
      <column caption='Total Inactive Time' datatype='string' name='[TotalInactiveTime]' role='dimension' type='nominal'>
      </column>
      <column caption='Total Steps' datatype='integer' datatype-customized='true' name='[TotalSteps]' role='measure' type='quantitative'>
      </column>
      <column caption='Rownames' datatype='integer' hidden='true' name='[rownames]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[Set 1]' derivation='InOut' name='[io:Set 1:nk]' pivot='key' type='nominal'>
        <aliases>
          <alias key='false' value='Jersey City' />
          <alias key='true' value='Brooklyn' />
        </aliases>
      </column-instance>
      <column-instance column='[Weekday/Weekend]' derivation='InOut' name='[io:Weekday/Weekend:nk]' pivot='key' type='nominal'>
        <aliases>
          <alias key='false' value='Weekend' />
          <alias key='true' value='Weekday' />
        </aliases>
      </column-instance>
      <column-instance column='[Date]' derivation='Weekday' name='[wd:Date:ok]' pivot='key' type='ordinal' />
      <group caption='Location' name='[Set 1]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter expression='Month([Date]) &gt;= 8 AND Month([Date]) &lt;= 10' function='filter' user:ui-marker='filter-by'>
          <groupfilter function='level-members' level='[Date]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        </groupfilter>
      </group>
      <group name='[Weekday/Weekend]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter from='2' function='range' level='[wd:Date:ok]' to='6' />
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/cityhunter870804/Documents/MyJawboneUP/acitivity.tde' schema='Extract' tablename='Extract' update-time='07/23/2015 02:42:11 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='258' timestamp-start='2015-07-23 02:42:11.892' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>DateOfActivity</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DateOfActivity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DateOfActivity</remote-alias>
              <ordinal>0</ordinal>
              <family>acitivity.Rda</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>258</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;1/1/2015&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;9/9/2014&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>135</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>1</ordinal>
              <family>acitivity.Rda</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>258</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='datetime'>#2014-08-05 00:00:00#</statistic>
                <statistic aggregation='Max' datatype='datetime'>#2015-07-21 00:00:00#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DistanceCoveredKM</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DistanceCoveredKM]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DistanceCoveredKM</remote-alias>
              <ordinal>2</ordinal>
              <family>acitivity.Rda</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>255</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;0.118&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;9.96&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DistanceCoveredMI</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DistanceCoveredMI]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DistanceCoveredMI</remote-alias>
              <ordinal>3</ordinal>
              <family>acitivity.Rda</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>215</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;0.07&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;8.77&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>4</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentTimeActive</remote-name>
              <remote-type>129</remote-type>
              <local-name>[PercentTimeActive]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentTimeActive</remote-alias>
              <ordinal>5</ordinal>
              <family>acitivity.Rda</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>242</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;0.23\%&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;9.96\%&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentTimeInactive</remote-name>
              <remote-type>129</remote-type>
              <local-name>[PercentTimeInactive]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentTimeInactive</remote-alias>
              <ordinal>6</ordinal>
              <family>acitivity.Rda</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>242</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;0.00\%&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;99.77\%&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalActiveTimeInSeconds</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TotalActiveTimeInSeconds]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalActiveTimeInSeconds</remote-alias>
              <ordinal>7</ordinal>
              <family>acitivity.Rda</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>251</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;10100&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;990&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalActiveTime</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TotalActiveTime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalActiveTime</remote-alias>
              <ordinal>8</ordinal>
              <family>acitivity.Rda</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>116</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;12m&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;8m&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalCaloriesBurned</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TotalCaloriesBurned]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalCaloriesBurned</remote-alias>
              <ordinal>9</ordinal>
              <family>acitivity.Rda</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>258</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;1035.51&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;97.8&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalInactiveTimeInSeconds</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TotalInactiveTimeInSeconds]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalInactiveTimeInSeconds</remote-alias>
              <ordinal>10</ordinal>
              <family>acitivity.Rda</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>133</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;0&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;30600&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalInactiveTime</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TotalInactiveTime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalInactiveTime</remote-alias>
              <ordinal>11</ordinal>
              <family>acitivity.Rda</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>126</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;4h 1m&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Unknown&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalSteps</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TotalSteps]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalSteps</remote-alias>
              <ordinal>12</ordinal>
              <family>acitivity.Rda</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>254</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;10018&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;9998&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='sleep' inline='true' name='stat-direct.42207.947630902800' version='9.0'>
      <connection class='stat-direct' directory='/Users/cityhunter870804/Documents/MyJawboneUP' filename='sleep.Rda' password='' server=''>
        <relation name='sleep.Rda' table='[sleep.Rda]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames]</local-name>
            <parent-name>[sleep.Rda]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FellAsleepAt</remote-name>
            <remote-type>135</remote-type>
            <local-name>[FellAsleepAt]</local-name>
            <parent-name>[sleep.Rda]</parent-name>
            <remote-alias>FellAsleepAt</remote-alias>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AwokeAt</remote-name>
            <remote-type>135</remote-type>
            <local-name>[AwokeAt]</local-name>
            <parent-name>[sleep.Rda]</parent-name>
            <remote-alias>AwokeAt</remote-alias>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalTimeSlept</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TotalTimeSlept]</local-name>
            <parent-name>[sleep.Rda]</parent-name>
            <remote-alias>TotalTimeSlept</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalTimeSleptInSeconds</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TotalTimeSleptInSeconds]</local-name>
            <parent-name>[sleep.Rda]</parent-name>
            <remote-alias>TotalTimeSleptInSeconds</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TimeInLightSleep</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TimeInLightSleep]</local-name>
            <parent-name>[sleep.Rda]</parent-name>
            <remote-alias>TimeInLightSleep</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TimeInLightSleepSeconds</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TimeInLightSleepSeconds]</local-name>
            <parent-name>[sleep.Rda]</parent-name>
            <remote-alias>TimeInLightSleepSeconds</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentTimeInLightSleep</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PercentTimeInLightSleep]</local-name>
            <parent-name>[sleep.Rda]</parent-name>
            <remote-alias>PercentTimeInLightSleep</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TimeInDeepSleep</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TimeInDeepSleep]</local-name>
            <parent-name>[sleep.Rda]</parent-name>
            <remote-alias>TimeInDeepSleep</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TimeInDeepSleepSeconds</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TimeInDeepSleepSeconds]</local-name>
            <parent-name>[sleep.Rda]</parent-name>
            <remote-alias>TimeInDeepSleepSeconds</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentTimeInDeepSleep</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PercentTimeInDeepSleep]</local-name>
            <parent-name>[sleep.Rda]</parent-name>
            <remote-alias>PercentTimeInDeepSleep</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TimeAwake</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TimeAwake]</local-name>
            <parent-name>[sleep.Rda]</parent-name>
            <remote-alias>TimeAwake</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TimeAwakeSeconds</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TimeAwakeSeconds]</local-name>
            <parent-name>[sleep.Rda]</parent-name>
            <remote-alias>TimeAwakeSeconds</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentTimeAwake</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PercentTimeAwake]</local-name>
            <parent-name>[sleep.Rda]</parent-name>
            <remote-alias>PercentTimeAwake</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SleepGraphImageURL</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SleepGraphImageURL]</local-name>
            <parent-name>[sleep.Rda]</parent-name>
            <remote-alias>SleepGraphImageURL</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[sleep.Rda]</parent-name>
            <remote-alias>Date</remote-alias>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Awoke At' datatype='datetime' name='[AwokeAt]' role='dimension' type='ordinal'>
      </column>
      <column caption='Time In Light Sleep Hours' datatype='real' name='[Calculation_2710722231357206]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[TimeInLightSleepSeconds] / 3600' />
      </column>
      <column caption='Time In Light Sleep Percentage' datatype='real' default-format='p0.00%' name='[Calculation_3070722231204157]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='FLOAT(left([PercentTimeInLightSleep],FIND([PercentTimeInLightSleep],&quot;%&quot;)))' />
      </column>
      <column caption='Total Time Slept In Hours' datatype='real' default-format='n#,##0.0' name='[Calculation_5830722231445727]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[TotalTimeSleptInSeconds] / 3600' />
      </column>
      <column caption='Time Awake Hours' datatype='real' name='[Calculation_5870722231425850]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[TimeAwakeSeconds] / 3600' />
      </column>
      <column caption='Time in Deep Sleep Percentage' datatype='real' default-format='p0.00%' name='[Calculation_6010722231128452]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='FLOAT(left([PercentTimeInDeepSleep],FIND([PercentTimeInDeepSleep],&quot;%&quot;)))' />
      </column>
      <column caption='Time Awake Percentage' datatype='real' name='[Calculation_7610722231052026]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='FLOAT(left([PercentTimeAwake],FIND([PercentTimeAwake],&quot;%&quot;)))' />
      </column>
      <column caption='Time In Deep Sleep Hours' datatype='real' name='[Calculation_9930722231324857]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[TimeInDeepSleepSeconds] / 3600' />
      </column>
      <column datatype='datetime' name='[Date]' role='dimension' type='ordinal'>
      </column>
      <column caption='Fell Asleep At' datatype='datetime' name='[FellAsleepAt]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Percent Time Awake' datatype='string' name='[PercentTimeAwake]' role='dimension' type='nominal'>
      </column>
      <column caption='Percent Time In Deep Sleep' datatype='string' name='[PercentTimeInDeepSleep]' role='dimension' type='nominal'>
      </column>
      <column caption='Percent Time In Light Sleep' datatype='string' name='[PercentTimeInLightSleep]' role='dimension' type='nominal'>
      </column>
      <column caption='Sleep Graph Image URL' datatype='string' hidden='true' name='[SleepGraphImageURL]' role='dimension' type='nominal'>
      </column>
      <column caption='Time Awake Seconds' datatype='integer' datatype-customized='true' name='[TimeAwakeSeconds]' role='measure' type='quantitative'>
      </column>
      <column caption='Time Awake' datatype='string' name='[TimeAwake]' role='dimension' type='nominal'>
      </column>
      <column caption='Time In Deep Sleep Seconds' datatype='integer' datatype-customized='true' name='[TimeInDeepSleepSeconds]' role='measure' type='quantitative'>
      </column>
      <column caption='Time In Deep Sleep' datatype='string' name='[TimeInDeepSleep]' role='dimension' type='nominal'>
      </column>
      <column caption='Time In Light Sleep Seconds' datatype='integer' datatype-customized='true' name='[TimeInLightSleepSeconds]' role='measure' type='quantitative'>
      </column>
      <column caption='Time In Light Sleep' datatype='string' name='[TimeInLightSleep]' role='dimension' type='nominal'>
      </column>
      <column caption='Total Time Slept In Seconds' datatype='integer' datatype-customized='true' name='[TotalTimeSleptInSeconds]' role='measure' type='quantitative'>
      </column>
      <column caption='Total Time Slept' datatype='string' name='[TotalTimeSlept]' role='dimension' type='nominal'>
      </column>
      <column caption='Rownames' datatype='integer' hidden='true' name='[rownames]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[Set 1]' derivation='InOut' name='[io:Set 1:nk]' pivot='key' type='nominal'>
        <aliases>
          <alias key='false' value='Jersey City' />
          <alias key='true' value='Brooklyn' />
        </aliases>
      </column-instance>
      <column-instance column='[Weekday]' derivation='InOut' name='[io:Weekday:nk]' pivot='key' type='nominal'>
        <aliases>
          <alias key='false' value='Weekend' />
          <alias key='true' value='Weekday' />
        </aliases>
      </column-instance>
      <column-instance column='[Date]' derivation='Weekday' name='[wd:Date:ok]' pivot='key' type='ordinal' />
      <group caption='Move' name='[Set 1]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter expression='Month([Date]) &gt;= 8 AND Month([Date]) &lt;= 10' function='filter' user:ui-marker='filter-by'>
          <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
            <groupfilter function='member' level='[Date]' member='#2014-08-05 07:05:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-08-06 07:30:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-08-07 07:10:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-08-08 08:55:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-08-09 10:10:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-08-10 10:00:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-08-11 06:50:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-08-11 18:55:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-08-12 07:25:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-08-12 09:00:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-08-13 07:25:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-08-14 07:10:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-08-15 08:05:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-08-16 07:45:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-08-16 15:45:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-08-17 09:45:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-08-18 06:45:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-08-19 07:25:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-08-20 07:25:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-08-21 08:20:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-08-21 16:14:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-08-22 07:15:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-08-23 09:35:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-08-24 09:30:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-08-25 06:45:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-08-26 06:50:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-08-27 06:40:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-08-28 07:30:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-08-28 19:07:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-08-29 06:35:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-08-30 09:20:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-08-31 09:10:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-09-01 11:40:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-09-02 06:50:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-09-03 07:45:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-09-04 07:25:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-09-05 07:25:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-09-06 09:05:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-09-07 09:50:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-09-08 06:55:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-09-09 07:15:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-09-10 06:55:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-09-10 14:27:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-09-11 07:20:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-09-12 07:15:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-09-13 08:45:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-09-14 10:35:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-09-15 06:55:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-09-16 07:30:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-09-17 07:35:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-09-18 07:45:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-09-19 07:30:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-09-20 09:55:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-09-21 10:40:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-09-22 06:50:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-09-23 07:30:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-09-24 08:20:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-09-25 07:45:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-09-26 08:05:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-09-27 11:00:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-09-28 11:05:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-09-29 06:50:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-09-30 08:05:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-10-01 07:25:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-10-02 07:50:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-10-03 08:00:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-10-04 10:40:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-10-05 10:10:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-10-06 06:45:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-10-07 07:35:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-10-09 07:10:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-10-10 07:30:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-10-11 10:30:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-10-12 11:20:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-10-13 06:50:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-10-13 07:55:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-10-14 08:15:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-10-15 07:30:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-10-16 07:25:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-10-17 08:25:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-10-18 09:35:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-10-19 08:50:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-10-20 06:50:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-10-21 07:45:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-10-22 07:20:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-10-23 07:30:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-10-26 07:40:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-10-27 06:55:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-10-28 07:05:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-10-29 07:40:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-10-30 07:50:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-10-31 09:10:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-11-01 11:15:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-11-02 10:55:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-11-03 04:00:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-11-04 08:20:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-11-05 08:20:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-11-06 08:40:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-11-07 08:15:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-11-08 09:55:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-11-09 11:20:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-11-10 06:50:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-11-11 07:30:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-11-12 07:15:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-11-13 08:00:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-11-15 10:40:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-11-16 11:55:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-11-17 06:50:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-11-18 07:25:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-11-19 07:25:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-11-20 08:25:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-11-21 08:35:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-11-22 11:45:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-11-23 12:05:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-11-24 06:50:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-11-25 07:20:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-11-26 07:25:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-11-27 11:20:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-11-28 09:55:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-11-29 10:15:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-11-30 08:30:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-12-01 06:50:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-12-02 08:35:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-12-03 10:05:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-12-06 10:10:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-12-07 09:15:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-12-09 07:20:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-12-10 08:15:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-12-11 08:20:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-12-12 08:10:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-12-17 06:50:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-12-18 09:50:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-12-19 07:15:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-12-21 11:05:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-12-22 08:30:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-12-24 09:05:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-12-25 10:05:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-12-26 09:40:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-12-27 09:25:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-12-28 08:20:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-12-29 10:10:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-12-30 11:35:00#' />
            <groupfilter function='member' level='[Date]' member='#2014-12-31 10:15:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-01-01 08:35:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-01-02 10:50:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-01-04 11:45:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-01-05 06:50:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-01-06 08:15:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-01-07 08:05:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-01-08 07:40:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-01-09 08:55:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-01-10 11:25:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-01-11 11:00:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-01-12 06:50:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-01-13 08:05:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-01-14 08:20:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-01-15 08:15:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-01-16 07:50:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-01-17 09:45:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-01-18 10:00:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-01-19 10:20:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-01-20 08:50:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-01-21 08:20:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-01-22 07:40:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-01-23 07:15:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-01-26 06:55:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-01-27 08:40:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-01-28 07:30:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-01-29 07:55:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-02-02 08:35:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-02-03 08:35:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-02-04 08:40:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-02-05 07:55:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-02-06 07:25:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-02-07 10:45:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-02-08 12:05:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-02-09 06:50:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-02-10 07:50:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-02-11 08:15:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-02-12 08:10:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-02-13 08:05:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-02-14 12:40:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-02-16 10:25:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-02-18 08:40:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-02-19 08:40:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-02-20 07:55:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-02-21 09:45:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-02-22 09:45:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-02-23 06:45:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-02-24 07:50:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-02-25 08:15:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-02-26 07:30:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-02-27 08:15:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-03-01 06:45:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-03-01 10:00:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-03-02 06:45:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-03-03 08:20:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-03-04 08:25:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-03-05 10:05:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-03-07 18:55:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-03-08 18:40:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-03-09 18:40:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-03-10 20:40:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-03-11 18:35:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-03-12 20:10:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-03-13 19:30:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-03-14 19:30:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-03-14 21:15:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-03-15 17:50:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-03-16 20:30:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-03-17 21:10:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-03-18 19:30:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-03-19 19:25:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-03-20 21:15:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-03-21 17:45:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-03-23 05:40:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-03-24 04:50:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-03-25 05:55:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-03-26 07:35:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-03-27 07:40:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-03-28 09:20:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-03-29 09:20:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-03-31 07:25:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-04-01 08:15:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-04-02 08:25:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-04-03 08:20:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-04-04 09:10:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-04-05 08:15:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-04-06 07:55:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-04-08 08:40:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-04-09 10:05:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-04-10 08:25:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-04-11 10:40:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-04-12 10:45:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-04-13 06:55:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-04-14 08:40:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-04-15 07:40:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-04-17 08:15:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-04-18 12:05:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-04-19 10:35:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-04-20 07:35:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-04-21 08:10:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-04-22 08:20:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-04-25 09:00:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-04-26 11:05:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-04-27 08:15:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-05-01 09:10:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-05-03 09:30:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-05-04 07:20:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-05-05 08:10:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-05-06 08:15:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-05-07 08:00:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-07-16 07:40:00#' />
            <groupfilter function='member' level='[Date]' member='#2015-07-22 07:25:00#' />
          </groupfilter>
        </groupfilter>
      </group>
      <group name='[Weekday]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter from='2' function='range' level='[wd:Date:ok]' to='6' />
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/cityhunter870804/Documents/MyJawboneUP/sleep.tde' schema='Extract' tablename='Extract' update-time='07/23/2015 02:45:07 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='256' timestamp-start='2015-07-23 02:45:07.420' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>AwokeAt</remote-name>
              <remote-type>135</remote-type>
              <local-name>[AwokeAt]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AwokeAt</remote-alias>
              <ordinal>0</ordinal>
              <family>sleep.Rda</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>255</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='datetime'>#2014-08-05 07:05:00#</statistic>
                <statistic aggregation='Max' datatype='datetime'>#2015-07-22 07:25:00#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>135</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>1</ordinal>
              <family>sleep.Rda</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>255</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='datetime'>#2014-08-05 07:05:00#</statistic>
                <statistic aggregation='Max' datatype='datetime'>#2015-07-22 07:25:00#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>FellAsleepAt</remote-name>
              <remote-type>135</remote-type>
              <local-name>[FellAsleepAt]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>FellAsleepAt</remote-alias>
              <ordinal>2</ordinal>
              <family>sleep.Rda</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>256</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='datetime'>#2014-08-05 01:09:00#</statistic>
                <statistic aggregation='Max' datatype='datetime'>#2015-07-22 00:36:00#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>3</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentTimeAwake</remote-name>
              <remote-type>129</remote-type>
              <local-name>[PercentTimeAwake]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentTimeAwake</remote-alias>
              <ordinal>4</ordinal>
              <family>sleep.Rda</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>238</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;0.00\%&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;94.49\%&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentTimeInDeepSleep</remote-name>
              <remote-type>129</remote-type>
              <local-name>[PercentTimeInDeepSleep]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentTimeInDeepSleep</remote-alias>
              <ordinal>5</ordinal>
              <family>sleep.Rda</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>238</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;0.00\%&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;61.61\%&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentTimeInLightSleep</remote-name>
              <remote-type>129</remote-type>
              <local-name>[PercentTimeInLightSleep]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentTimeInLightSleep</remote-alias>
              <ordinal>6</ordinal>
              <family>sleep.Rda</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>239</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;0.00\%&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;75.98\%&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TimeAwakeSeconds</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TimeAwakeSeconds]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TimeAwakeSeconds</remote-alias>
              <ordinal>7</ordinal>
              <family>sleep.Rda</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>240</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;0&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;9893&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TimeAwake</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TimeAwake]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TimeAwake</remote-alias>
              <ordinal>8</ordinal>
              <family>sleep.Rda</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>101</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;0&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;6m&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TimeInDeepSleepSeconds</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TimeInDeepSleepSeconds]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TimeInDeepSleepSeconds</remote-alias>
              <ordinal>9</ordinal>
              <family>sleep.Rda</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>219</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;0&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;9971&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TimeInDeepSleep</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TimeInDeepSleep]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TimeInDeepSleep</remote-alias>
              <ordinal>10</ordinal>
              <family>sleep.Rda</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>130</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;0&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;8m&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TimeInLightSleepSeconds</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TimeInLightSleepSeconds]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TimeInLightSleepSeconds</remote-alias>
              <ordinal>11</ordinal>
              <family>sleep.Rda</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>242</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;0&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;998&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TimeInLightSleep</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TimeInLightSleep]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TimeInLightSleep</remote-alias>
              <ordinal>12</ordinal>
              <family>sleep.Rda</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>165</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;0&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;7h 24m&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalTimeSleptInSeconds</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TotalTimeSleptInSeconds]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalTimeSleptInSeconds</remote-alias>
              <ordinal>13</ordinal>
              <family>sleep.Rda</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>250</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;10383&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;6094&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalTimeSlept</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TotalTimeSlept]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalTimeSlept</remote-alias>
              <ordinal>14</ordinal>
              <family>sleep.Rda</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>166</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;10h 45m&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;9h 5m&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Activity'>
      <table>
        <view>
          <datasources>
            <datasource caption='acitivity' name='stat-direct.42207.944543518500' />
          </datasources>
          <datasource-dependencies datasource='stat-direct.42207.944543518500'>
            <column datatype='datetime' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column caption='Total Steps' datatype='integer' datatype-customized='true' name='[TotalSteps]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[TotalSteps]' derivation='Avg' name='[avg:TotalSteps:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Weekday' name='[wd:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <sort class='manual' column='[stat-direct.42207.944543518500].[wd:Date:ok]' direction='ASC'>
            <dictionary>
              <bucket>2</bucket>
              <bucket>3</bucket>
              <bucket>4</bucket>
              <bucket>5</bucket>
              <bucket>6</bucket>
              <bucket>7</bucket>
              <bucket>1</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='total-label' data-class='total' field='[stat-direct.42207.944543518500].[mn:Date:ok]' value='Avg' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[stat-direct.42207.944543518500].[mn:Date:ok]' value='iLLL' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='background-color' id='refline0' value='#ffffff7f' />
            <format attr='fill-below' id='refline0' value='#f0f0f0' />
            <format attr='stroke-color' id='refline0' value='#820000e5' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#26794a' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([stat-direct.42207.944543518500].[wd:Date:ok] * [stat-direct.42207.944543518500].[avg:TotalSteps:qk])</rows>
        <cols total='true'>[stat-direct.42207.944543518500].[mn:Date:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Activity 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='acitivity' name='stat-direct.42207.944543518500' />
          </datasources>
          <datasource-dependencies datasource='stat-direct.42207.944543518500'>
            <column datatype='datetime' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column caption='Total Steps' datatype='integer' datatype-customized='true' name='[TotalSteps]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[TotalSteps]' derivation='Avg' name='[avg:TotalSteps:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[stat-direct.42207.944543518500].[avg:TotalSteps:qk]' scope='rows' value='false' />
            <format attr='tick-color' scope='rows' value='#00000000' />
            <format attr='tick-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' data-class='total' value='none' />
            <format attr='background-color' field='[stat-direct.42207.944543518500].[mn:Date:ok]' value='#eaf7e1' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[stat-direct.42207.944543518500].[mn:Date:ok]' value='iLLL' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' value='none' />
            <format attr='band-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='rows' value='none' />
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <trendline degree='3' enable-confidence-bands='true' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='polynomial'>
            </trendline>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#26794a' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-color' value='#820000ef' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[stat-direct.42207.944543518500].[avg:TotalSteps:qk]</rows>
        <cols>[stat-direct.42207.944543518500].[mn:Date:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Activity 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='acitivity' name='stat-direct.42207.944543518500' />
          </datasources>
          <datasource-dependencies datasource='stat-direct.42207.944543518500'>
            <column datatype='datetime' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column caption='Total Steps' datatype='integer' datatype-customized='true' name='[TotalSteps]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[TotalSteps]' derivation='Avg' name='[avg:TotalSteps:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Weekday/Weekend]' derivation='InOut' name='[io:Weekday/Weekend:nk]' pivot='key' type='nominal'>
              <aliases>
                <alias key='false' value='Weekend' />
                <alias key='true' value='Weekday' />
              </aliases>
            </column-instance>
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[stat-direct.42207.944543518500].[avg:TotalSteps:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' value='none' />
            <format attr='band-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='rows' value='none' />
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <trendline degree='3' enable-confidence-bands='true' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='polynomial'>
            </trendline>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#26794a' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-color' value='#820000ef' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([stat-direct.42207.944543518500].[io:Weekday/Weekend:nk] * [stat-direct.42207.944543518500].[avg:TotalSteps:qk])</rows>
        <cols>[stat-direct.42207.944543518500].[mn:Date:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 7'>
      <table>
        <view>
          <datasources>
            <datasource caption='acitivity' name='stat-direct.42207.944543518500' />
          </datasources>
          <datasource-dependencies datasource='stat-direct.42207.944543518500'>
            <column caption='Total Steps' datatype='integer' datatype-customized='true' name='[TotalSteps]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[TotalSteps]' derivation='Avg' name='[avg:TotalSteps:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Set 1]' derivation='InOut' name='[io:Set 1:nk]' pivot='key' type='nominal'>
              <aliases>
                <alias key='false' value='Jersey City' />
                <alias key='true' value='Brooklyn' />
              </aliases>
            </column-instance>
            <column-instance column='[Weekday/Weekend]' derivation='InOut' name='[io:Weekday/Weekend:nk]' pivot='key' type='nominal'>
              <aliases>
                <alias key='false' value='Weekend' />
                <alias key='true' value='Weekday' />
              </aliases>
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[stat-direct.42207.944543518500].[avg:TotalSteps:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='rows' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#26794a' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[stat-direct.42207.944543518500].[avg:TotalSteps:qk]</rows>
        <cols>([stat-direct.42207.944543518500].[io:Weekday/Weekend:nk] / [stat-direct.42207.944543518500].[io:Set 1:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Sleep'>
      <table>
        <view>
          <datasources>
            <datasource caption='sleep' name='stat-direct.42207.947630902800' />
          </datasources>
          <datasource-dependencies datasource='stat-direct.42207.947630902800'>
            <column caption='Total Time Slept In Hours' datatype='real' default-format='n#,##0.0' name='[Calculation_5830722231445727]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[TotalTimeSleptInSeconds] / 3600' />
            </column>
            <column datatype='datetime' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Calculation_5830722231445727]' derivation='Avg' name='[avg:Calculation_5830722231445727:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Weekday]' derivation='InOut' name='[io:Weekday:nk]' pivot='key' type='nominal'>
              <aliases>
                <alias key='false' value='Weekend' />
                <alias key='true' value='Weekday' />
              </aliases>
            </column-instance>
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[stat-direct.42207.947630902800].[avg:Calculation_5830722231445727:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' value='#b40f1e67' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <trendline degree='3' enable-confidence-bands='true' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='polynomial'>
            </trendline>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#404b73' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-color' value='#b40f1e67' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([stat-direct.42207.947630902800].[io:Weekday:nk] * [stat-direct.42207.947630902800].[avg:Calculation_5830722231445727:qk])</rows>
        <cols>[stat-direct.42207.947630902800].[mn:Date:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Sleep 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='sleep' name='stat-direct.42207.947630902800' />
          </datasources>
          <datasource-dependencies datasource='stat-direct.42207.947630902800'>
            <column caption='Total Time Slept In Hours' datatype='real' default-format='n#,##0.0' name='[Calculation_5830722231445727]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[TotalTimeSleptInSeconds] / 3600' />
            </column>
            <column-instance column='[Set 1]' derivation='InOut' name='[io:Set 1:nk]' pivot='key' type='nominal'>
              <aliases>
                <alias key='false' value='Jersey City' />
                <alias key='true' value='Brooklyn' />
              </aliases>
            </column-instance>
            <column-instance column='[Weekday]' derivation='InOut' name='[io:Weekday:nk]' pivot='key' type='nominal'>
              <aliases>
                <alias key='false' value='Weekend' />
                <alias key='true' value='Weekday' />
              </aliases>
            </column-instance>
            <column-instance column='[Calculation_5830722231445727]' derivation='Median' name='[med:Calculation_5830722231445727:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[stat-direct.42207.947630902800].[med:Calculation_5830722231445727:qk]' scope='rows' value='false' />
            <format attr='tick-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-color' scope='cols' value='#906800' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' scope='cols' value='#906800' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='rows' value='none' />
            <format attr='div-level' scope='rows' value='0' />
            <format attr='line-pattern' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#404b73' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-color' value='#b68900ef' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[stat-direct.42207.947630902800].[med:Calculation_5830722231445727:qk]</rows>
        <cols>([stat-direct.42207.947630902800].[io:Weekday:nk] / [stat-direct.42207.947630902800].[io:Set 1:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Sleep2'>
      <table>
        <view>
          <datasources>
            <datasource caption='sleep' name='stat-direct.42207.947630902800' />
          </datasources>
          <datasource-dependencies datasource='stat-direct.42207.947630902800'>
            <column caption='Total Time Slept In Hours' datatype='real' default-format='n#,##0.0' name='[Calculation_5830722231445727]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[TotalTimeSleptInSeconds] / 3600' />
            </column>
            <column datatype='datetime' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Calculation_5830722231445727]' derivation='Median' name='[med:Calculation_5830722231445727:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Weekday' name='[wd:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <sort class='manual' column='[stat-direct.42207.947630902800].[wd:Date:ok]' direction='ASC'>
            <dictionary>
              <bucket>2</bucket>
              <bucket>3</bucket>
              <bucket>4</bucket>
              <bucket>5</bucket>
              <bucket>6</bucket>
              <bucket>7</bucket>
              <bucket>1</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[stat-direct.42207.947630902800].[med:Calculation_5830722231445727:qk]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <trendline degree='3' enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='polynomial'>
            </trendline>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#404b73' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-color' value='#b40f1edd' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([stat-direct.42207.947630902800].[wd:Date:ok] * [stat-direct.42207.947630902800].[med:Calculation_5830722231445727:qk])</rows>
        <cols>[stat-direct.42207.947630902800].[mn:Date:ok]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='83125' id='1' name='Sheet 7' w='50000' x='0' y='16875'>
          </zone>
          <zone h='83125' id='3' name='Sleep 3' w='50000' x='50000' y='16875'>
          </zone>
          <zone forceUpdate='true' h='7500' id='4' type='text' w='100000' x='0' y='0'>
            <formatted-text>
              <run fontsize='18'>搬家前/后的健康数据分析</run>
              <run>&#10;数据来源：Jawbone UP</run>
            </formatted-text>
          </zone>
          <zone forceUpdate='true' h='5375' id='5' type='text' w='50000' x='0' y='7500'>
            <formatted-text>
              <run>步数结论：在布鲁克林时周中平均每天要比新泽西要多走1357步，而周末行走步数则差不多</run>
            </formatted-text>
          </zone>
          <zone forceUpdate='true' h='5375' id='6' type='text' w='50000' x='50000' y='7500'>
            <formatted-text>
              <run>睡眠结论：然而从布鲁克林搬到新泽西以后，因为上下班距离缩短，平时（周中）平均每天可以比在搬家前要多睡48分钟左右。</run>
            </formatted-text>
          </zone>
          <zone h='4000' id='7' type='text' w='50000' x='0' y='12875'>
            <formatted-text>
              <run bold='true' fontalignment='1'>单位：步数</run>
            </formatted-text>
          </zone>
          <zone forceUpdate='true' h='4000' id='8' type='text' w='50000' x='50000' y='12875'>
            <formatted-text>
              <run bold='true' fontalignment='1'>单位：小时</run>
            </formatted-text>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Activity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[stat-direct.42207.944543518500].[med:Calculation_3490722225354213:qk]</field>
          <field>[stat-direct.42207.944543518500].[none:Calculation_9550722225707617:nk]</field>
          <field>[stat-direct.42207.944543518500].[none:DateOfActivity:nk]</field>
          <field>[stat-direct.42207.944543518500].[none:DistanceCoveredKM:nk]</field>
          <field>[stat-direct.42207.944543518500].[none:PercentTimeActive:nk]</field>
          <field>[stat-direct.42207.944543518500].[none:TotalSteps:nk]</field>
          <field>[stat-direct.42207.944543518500].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sleep'>
      <cards>
        <edge name='left'>
          <strip size='151'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[stat-direct.42207.947630902800].[io:Weekday:nk]</field>
          <field>[stat-direct.42207.947630902800].[med:Calculation_6010722231128452:qk]</field>
          <field>[stat-direct.42207.947630902800].[none:PercentTimeInDeepSleep:nk]</field>
          <field>[stat-direct.42207.947630902800].[none:TimeAwake:nk]</field>
          <field>[stat-direct.42207.947630902800].[none:TimeAwakeSeconds:nk]</field>
          <field>[stat-direct.42207.947630902800].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sleep2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[stat-direct.42207.947630902800].[sum:Calculation_6010722231128452:qk]</field>
          <field>[stat-direct.42207.947630902800].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
        <node-selection select-tuples='false'>
          <oriented-node-reference orientation='vertical'>
            <node-reference>
              <fields>
                <field>[stat-direct.42207.947630902800].[wd:Date:ok]</field>
              </fields>
              <multibucket>
                <bucket>6</bucket>
              </multibucket>
              <axis>[stat-direct.42207.947630902800].[med:Calculation_5830722231445727:qk]</axis>
            </node-reference>
            <page-reference>
            </page-reference>
          </oriented-node-reference>
        </node-selection>
      </selection-collection>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Activity 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[stat-direct.42207.944543518500].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Activity 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[stat-direct.42207.944543518500].[io:Weekday/Weekend:nk]</field>
          <field>[stat-direct.42207.944543518500].[mn:Date:ok]</field>
          <field>[stat-direct.42207.944543518500].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sleep 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[stat-direct.42207.947630902800].[io:Set 1:nk]</field>
          <field>[stat-direct.42207.947630902800].[io:Weekday:nk]</field>
          <field>[stat-direct.42207.947630902800].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[stat-direct.42207.944543518500].[io:Set 1:nk]</field>
          <field>[stat-direct.42207.944543518500].[io:Weekday/Weekend:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='1' name='Dashboard 1'>
      <zones>
        <zone name='Sheet 7'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[stat-direct.42207.944543518500].[avg:TotalSteps:qk]</axis>
                </node-reference>
                <page-reference>
                </page-reference>
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </zone>
        <zone name='Sleep 3'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone forceUpdate='true' name='' type='text' />
        <zone forceUpdate='true' name='' type='text' />
        <zone forceUpdate='true' name='' type='text' />
        <zone forceUpdate='true' name='' type='text' />
      </zones>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Activity' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sleep' width='192'>
      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
      Ttvs/wOfRhnc9Y+bYQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sleep2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Activity 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Activity 3' width='192'>
      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
      4Ms+1TSNYa4SP1XiLE7RRghRFIXn+bymRtKxK5NdK7vX6uIZNp/PcxwHIYxnU5l5+8ZfPzuC
      KOD0zbc8lAgb+HLLdU2jr2654BTtF7Mrmhq+OcudPMMpisKyLIQwnktl8gu3HAac/ouHy1n0
      EgoolUrZbLfo70wISafTt5w9lUpZrdZb3s26GMuLzJ5OpyVJWvTd3Zeu6CV8hYniJxs4xMLj
      odgVO38vIPtIz9m3394/NB4GAOSz8YHRqZstGgCQnJ08cqpzqPdc70jospQz40PxjHz97AAA
      AEhvx6npWGb+qcG+7t7u88YVD+CV2ZVc8r0Pjk+PD57sGLi+5ZarReJV5VTf8OT1M16HfGZ2
      MDi3aV9f93l8jRrjsqJ7O89MX/eWpeLRdFZZQpfW+TubRiaHBhLgreGB+ubW/q7+QO0agdYZ
      AlkWnOsdvaut5uPzw/VrW7Ws/NgjeykIIISF7L0fH5swrOUV09///us1ddXHDp9au/mufGQU
      seL6bTsmJsbjwWGLtzo01MfZnOsb63lf7do6/2WbqsZmRn72i3ea3Uiq2/bxh297qpsGTx6t
      ampKJBMVdub8ZGrnPQ9vX193VcsL6PnMG6+9UtZ8T71dOTc6u7Gl6VhHb4VHIkqmrqWduvSh
      vTJ7Phv75fPPb9nelCOeic6jmJUEm0cg6Z17H+MvDTd7ZV4AgCLHj318Ljg5jfWEPDsTSaib
      NjacPT/08L7PB9w3ruryqZlTZwYnpxuNRCgyOTg4PCkJZPOuvRJ/yd2fX7ShZt587WVvy85m
      P+XylE1FEkOD/RZnwMHSgoVKxqaSKmckxnxtDy6HT3Tn8Y8GBgcNiz2XS3f39lc2t2UmB8K5
      jJoDnnJXfGp83Ebd/6nPHPrVvzsa76Yur0Gptg0bjMxkOJmBYxPeytqJiXG7Xbyr0t3X3ReJ
      TRM5PRbtK6uq2lHt+Jdfv/OX3/yzq9pQ62WS0CbKiUQ2F+vuEcpacrHZppbG5NTErq13zYyH
      wDwBXclo9xks+Ie7TtLVzsba6q7znW3r7kuOHl344vLm1urBaWVdQJ2JZzJystw2Om1tuX8B
      wYrDo90nzncRyAwMDBt61Ga3NPqFk0dPqwhNhpM3FNB4z5nO7m5E04PDg0Zs2i5ySmp8ZEa6
      94Hr3frR7jPE4h7tPcuo3plIPDoTZVwVsxPTST2HRcRhbTypNZa73U7HEraBLpJNzPYOTzbU
      VgyMjLucTtHmMPK5fCYRz8FyDz89m/R6PHab9Isf/+D+p36zoeyS+AozwXGrt4JDRkdHZ3lV
      9eToqKuimoa632k919XnLSuPRcKCaJNs1myo79hA6tlnHr+KAaloPCtjQkFMIqGQ3eNiWNEl
      wt6R6ZoKD80JiorL/NdbmR8KTdhcZbn41LuvvVyxfsf6xlodclo2TgAoq6y+QvSXoynZ6dmk
      oRGaIvHZadoiHn7v7bs//aX2au8NcgKgK9mOzu6GlvaJwW5osdtFlkcU4tjhkWDb+nUCc4Mq
      QJXTHZ19LevaBrs7BZtX4tGx/W9W3P2pHW3XW4o6MzEhev25WFjRtemZWZ/T8r0XXgxUrH3w
      nuaUhrwiM5vRa8sdCRn9f/x8Qz14CqKYAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sleep 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAAsTAAALEwEAmpwY
      AAAYuUlEQVR4nO3deXxV9Z3/8dc5d8/NTlYCWQhhDYQtbIosSkBxqXXfcRzX0bZOq047M62o
      rT+1dfpwqzCKVZS6QIGCO62sYQkEAiQEyEYgCdn35K7n/P6ASXWmmiActvN5Ph7nj3Nvzv1+
      z8l93+9Zv19F13UdIUxIURRFPduVEOJskgAIU5MACFOTAAhTO6cC0NjYeLarIEzmnAqAx+M5
      21UQJnNOBUCIM00CIEzNNAFoPXaQhS8uobq5neLNn/CHRYspb/JycPsaln6eizfw3dcDt6x8
      m/UFpXzzsqFO3aF8Fv/3avyG1v7s0QJd/O2T91m+oRi9+xhvvvwKH2/cS1tDFR8sWkhF63fv
      tlbs28ibf974vcquL83lnVVf0u4Nfq/l+8Jq2CefY6xWB+1VGyk8kk1t/jbW5dWTlHkJ3o3r
      6cy4iq7mo+wqLkWNGMCo4YPwNR+h6EA51qhkRg1L5Vj5PjwRoyjft4NWexwZsVb27S+hrrKU
      gqIObvZ0UFq0j5o2H3ED0wkLNOBxJzE41kFRYQnxGSOJDbOf7c1w0lSLDVd3K3/bkcfEiBi2
      7sglxBNFmjuJjdsbuOQGDyW791HV4WfQsEwSwyyUFRVS0xVk8PBMWptq2FOq0nysjKLyNsaN
      H0ZtSRHl9R5Sh40k1tpFcfkxCHYQsEWTlTUSf2Mlu/eV4Wnax/6jIczTjFs/y5NPPvmkcR9/
      ctrb2wkPDzfksy0qlJUVUNFupaW8ktgYJwE0KksaGDp5EvkfvcfeulYObN2IHtWPTe8u5UBz
      J4Wb12ONS8dTsY2yY02s35RPbPpISj9fyKdFTXQ1lHKkO5LRCX7e/egrOpsPs3HDAWyWY3yy
      vYnR0a28vXQlQ6bOop/LYsi6GUpRsfvq2LZnF4F2D3VKKJaWdsLCvFRZ4xjibmThh3/D317D
      X3fWEmetYtGyDfjbq1i7q4FhibC7qJzDeV9Ro8QTzzHeWryabn8dWzYeJC7Ky5K3ltLg9ZC7
      YTOhA9PZtHIpO/bX0lB6CF9kf6ZOGEOI7fTvrCxYsGCBaXaBLA43Q/qnsOeL1VTa07lszmQK
      1n9OtcVOSozG1qMN2FyRhIX5KS/JZ/PRJmyuCMLcHspra9F1nV3btqCEpTJmWDzFBV1ceeWN
      XD8nhxgdwmLjGZaWhE6AttZa0kZkoVRu4cPPtqEOnM6gKNvZ3gTfk0LMoOForQ2s2LSbaZdf
      RUZsC6s/3caIwcnUlxbQplqIDAtDP3qQ3QV5dFisRLlD0Q4X0+TX6Tiwk90NViZmZ1FVuZ9K
      j42oSDeav5KjjR7srkx+9C/zGRwdQvXRSqra2rny/oe5/ZYZhq+daQKAYiV10EAcSpC0tP4M
      TBxMnMVLaFgqA5JiiLVZsYW4cVjC6BedQpzdgt3txq5GEOOOAixMu/I64lp3sSm/nH4xHnbu
      zid/bz4t6JQd2MXmsjbSkuKx6Rai0oaTHqWwaUc5E6cO5Tz87e9hCU1keD8rAS2WkYMGkByb
      gCfgYkBSCuH9olF1K6FhIdiiE0iMj0HRbYSGu7DFJBJmhbBhM8kZG8WKLzfjDo3Cjk5oWCSq
      Ek+M24pitaDoOgpgdYRg12B37nrWbSgwft3MsgsECq5wF51BF+PGTiQ9ORaby8rAUVPITE0m
      PSWcypISXInpTJ8+i7FDoqgsKSU0eSiXTB2PNegjcfgkJmQOpLjKx1VzplJTWkybHkFqxlCm
      jB9CsK2GDtwMTIsnJX0Uro5iDgZiuG7uTMJd5/HhlmLFHWLBlTqCyZlDiYu0Y4uIYUL2WNKS
      BxHiaeBIvYfxM6ZzcXY2Tk8tRxsCTJw1k/R+IVgi+nPFxRPw1RaTPvVy+tvbKa9pZfS0GYzs
      H0nQGsrw4QPxdXrpP3Q8Fw2P4UBhITgiGTJ8BENTB2K3KKd9tRYsWLBAOZduh66qqiIpKeks
      la6jaRooKqqi/IP5/0vTNBRVRfnaPKqKqgfJ3/4lHy37nLTpt3DXFdk41NP/DzxnaBpBXUe1
      WI5vC00jCKhf2zZfp+saxzeVyj/ctLr+9237Ldv+dFAURZEAGELH5+miy6MTHhlqov3M84ui
      KMp53C6fyxTsTjd259muh+iN/DgJU5MACFOTAAhTkwAIU5MACFOTAAhTkwAIU5MACFOTAAhT
      kwAIU5MACFOTAAhTkwAIU5MACFOTAAhTkwAIUztvA6AFPKxduYRnn/8tuw838j9dxwS8nXzy
      0WJe+K+XKKltP/FqkIPbv+BoW4CAt5N1y9/lN8//ns93VRDUzpkH4sRZcN4GoKliKwv/vJ+s
      ofF88MLvaeg+3ntY8aY/sSy3lVEDw3njdy9T09zG1lXP8fi/L+BYR5CyfetYtr2MSaNjeOvt
      16jqpWczcWE7bwOg4kApLmX9pt14usKxnHjovKWmhJQZlzNtxkXUWw5ztLkNb/hIssIiCCga
      /VPH8POf/Ihxg4fiPuaAoLQAZmZIAALdraxd+kd++8J/sXTNVqrK9rNy9Rd0+/xUF2/lxUVL
      KKvvPKUymo8dojstg8njRuDvqqSl3QtA+tjLOPj7p/nFT3/G7oMBwkIimT7jctL7O9EBd1QC
      dk8Fz//ydUbdejWJ0a7TsMbifGVIAOqOFlPQYOGOe26i40AuB6sbaG7p4Mj+Tfzx4y1Mu3QO
      g2Ldp1RGe30JsZOvYvblOTgGtFLT0kpjcyu6NZQrH3iEBx/9CdPS4wlx2vh63xyN5bt44GfP
      kzr/X/inS0ee1x1WiVNnzC6QCqotQGtTG16tmfqObupLtrHw/b+SOPRixqbFAsf70fF4PD3T
      yRh88c3EF73EHff9jJCs20hSj/Lmq/+N5rKz89OnWPDCYmZdeTv9w+2AQtygFEKsKqV7c6mo
      OsLHr/+au3/0EjVtcgxgZob0C+TvbmPbV59wqN5H+f59jL9sDgc2bGbipZPZvCWf6//pYYbG
      heLz+Whra+tZzuv1nlS/QFowSDCoYbPb6Go6wvZNlUy58iKsehBNU7AZ0KGquHAYNk5wZ2sD
      JTVBhg9JJzoimYERbmIGjSR78gyunZTEqndWUNvhw263ExMT0zOdLNViwWY/3umsMzKRqXMn
      4VDBYrHIl1/0iSEdY4X1S2TMyAQOVdYy7epryEh0YHVFYrfaGDH9OpoD2+nq8ELo6esvX1Wt
      2M+/7vfFWWZc14i6jqbrqGrff4n/UdeIT656lc2Hdp3u2vVq5SMv43bIGaILmbFdIyrKt3Yq
      ezLq25upbKo5DRU6OZpu4LAk4pwhO8rC1CQAwtQkAMLUJADC1CQAwtQkAMLUJADC1CQAwtQk
      AMLUJADC1CQAwtQkAMLUJADC1CQAwtQkAMLUJADC1CQAwtQkAMLUJADC1CQAwtQkAMLUJADC
      1IzrFkWI78HXXkfu9nzaOiE8KpQBg0eRnhiBgk51WSE79pUxOGsSI1Li6aw/St6WfPQBQ5mS
      NYSWymJ27z2EK3kkkzLTcFp7/32XFkCcU/xdrRw8WExhwWZ+/osnyD/SCkB3fRG/efoPFJcd
      5N1nnmV/bRPLn/kNGwvLWP7Wk6zJ3c2CZ35NYfkR3n/vV3xeWEdfenyTAIhzSkjcYP75voeY
      nOZk5G2Pcn32QBSgvSKfrqwcfvrjRxmT2cwHG77inQIXSQOiufiSHzIlPYp7HvwlP374HqaE
      JFNzsKVP5UkAxDlFURR8HfV8llfB/Etn9PQuGJ6cifbJezz24E9YtLIAd8BPp28DrV6Vwty1
      rN3nZ/zYZPLefJnVNaHMzUmlL/0SyjGAOOc0VOyhxT+Y0an9QA/S0dGNLbQ/t/74UdKGR/Pl
      Ox4iYiNIi7ma2269id3LG8g7WMebeW/yaXM8Lz//IHF97HjZkBZAD3rZu24Nr/z+NT5ZX0RT
      zWHWb9qGN6jjaSznraUfnvIQSeLC1dnagq3/FEJsCgRbWPzic9T7PKz78Nf82+M/46B3ODmT
      LiJnagu33XwzC1dUMH5IPS8sWsqh/C956IGfsWZLZZ+OAQxpAVqPVbJ6axk33JTDx+98QYIz
      m7KyGtLid/Hhqs/JyrmdtJgQI4oWvQh6O/nji4/z4fpyOpqbSZ57P+8smI9V85P78bs8t3gV
      Tkckjz71DJSt49U/LKfeBlfft4AHc0ZTV7KN255YwRsL/5O0mFMb5urbDJl2My9POzGjOsiI
      GoojNJlnFq/C6wvicNhQVIW7nniBW31eVKsDi6qwv/zqns9Q+tgxsyEtgDMkhGh7C8uWL6fZ
      HU6I00ZrbTGLlqyg3/DZzMwcgKIo6Lr+jUkYT7W7uOWRZ1my+CUyJ8Vz/byLsAG6v4u1a0u5
      +/FnmT84goLCUmob/fzr715l6ZPX8+Wf9uDXu1j51FPsbqiH09Dz97dRFOX4BICDqXdeS6xN
      QbVYcLnsqOrx9xRFxe5wYbWoKIqCqqo909+X72V7GLECLc1Hafb347ofXks/bzVHWjvorG1m
      QvZoDhdupubE2Lxer5fq6uqeSUJgPEVRCQkN5UjuMmwD7mPehIzjb1gcjHR7ePlfH+TpDwqJ
      iU7kB7fdzbBwD4ue+5LpP0hn3eIXKc15gBsHjkX3naH/lWojItKYlgYM2gXSgjq20HBi+sUS
      GqHi9WnEj5jEpZdeTnTX66xauY6775yL2+n8xoAYVVVVRlRH/C+6r4U1azZxzYJHcCo6ug7+
      ziY2qhq/WPQO8fvf5sXte5mX5eL//fI3cNF13D0hkv+4dzVl2kYqi2pxvjuU5x+bje171mFr
      aQHvbV1zWterL+6ceg3ZaZk984YEID55FNmplbz9xhISh01h0rBk9jvd2B0hXHLDvTS++yll
      R5oZlRptRPGiF/7mwxR0zuOxFDfoAXZtWos1PoWMoJXNn3yMvbWS1KxsXv35T1han8Bj1ho2
      7EnmpeVfoXXW8ehP3+e+Wyd97y8/QFVLHV8U5p62deqr2SOmfmPekABYHG6mz7uei+foKBYL
      qgKxA9JOvBvOtXfeZESxoo8sEWk88e/ROE7MNxWWoLtSuOPH97JhSwFe1x1cPGkMtWkuBlc3
      AxARHYbDFYJqS+Dhx24k+QI5iWHgdQAVi1xlOCdZnJFMGhN5Yk5hzLU34A6PwuWyc9W1GT1/
      lzBxOln/e2Grk6zMQWeqqoaTr6jZKRZi4uPPdi3OGgnABSqoBVm9e90ZLzc+IoYp6f+n3Thn
      SQAMoOs6fp8Hf0BDUVRUqxWH3YaCjhYM4vH60HUdu8OJVQWvx4umWnDabQT8vuPLqQqKasVp
      t32vU+6+YIAnlr14+leuFzOGZksAzE7zd/P+K//B8o0VNNcdo//se1my4G5saOz+6BV+9fZn
      WJ1O7nziWWKbtrHorU/RAg5u/bfHqN6ynDVfFdJWX4118nyWvXAv4ZazvUYXLrkb1ACqzcUN
      Dy7gjdeeY/iERG6+evrxq62an6LiaubedC9PP/McM0cNBFd/nnj+dzw0O5K/7a/j9vse441X
      nmJEYhYP355DqHz5DSUBMICiKLhC3Bze9AG25HuZO/b4WRM9EEDr5yS/cC+Lnn6Yl77cx8Uz
      c3A37OK3731KTEQI9hA3h3asxT1uCjmjk+UfZDDZvgbRfU2sWp3HdTddglPR0TQNTbEydfat
      vLjgFzzxyLXsXL+XstISIjIu4bU/PE3uqj106x72/Xk7k6/IwWE17n4bcZwcAxjE33yUQu9c
      fj4wBPQA+es/RU1IZdu7C6m0p+BsPsC8nLvZ8vFCtjVEkKDVMDT7hzh9dezrjOPxEfF9uplL
      nBoJgEGskYP41ZOxOE/Md5TVEAzL4LZHHyMvvwjcs5g4YTS2izIYkJdPhxLOxOxxWKw6D/zq
      QWJO5T4D0WcSAIOojnCyRoSfmFMYffW1uEIjcblsXJqT8vc/dMQx/bK531h2eNbgM1dRk5MA
      nAmKhejY2LNdC/EPSABOQVAL8sH2z854uf0jY5kxbOIZL/dCJAE4BQEtyIK/vHbGy71kyAQJ
      wGkip0GFqUkAhKlJAISpSQCEqUkAhKlJAISpSQCEqUkAhKlJAISpSQCEqUkAhKlJAISpSQCE
      qUkAhKlJAISpGfI8QFPVPpYuWUOHrtPd4mfyFbPxtXeQkzODlopdvL/+ANf84IcMijVu4AMh
      +sKQFiA8fjA333MPV84YjSUkiqQwG03N7RzZv5m3Vm/moplz5MsvzgmGtABWq5N+0X6+2FbM
      lOtuJsHVSH3pdhbut5I59RrGDTr+fKymafj9fiOqIESfGHYM0Fqxk3JLf6YMT0JVgKCLK3Om
      UbXvr5Q1dAEQCARob2/vmWSMMHGmGRQAjcN7D5M6eixuC+ga9EvPJHvKDH6Q3Z9VS1ZS1+nH
      brcTExPTM/V1aEshThfDHoqPHZJFdlQiCuDuF8+E8TYcVjuZM6+nObCVjvZu4tzS+5M4uwwK
      gEr/EWN65kKi4smK+p9RSEKYNmeWMcUKcZLkOoAwNQmAMDUJgDA1CYAwNQmAMDUJgDA1CYAw
      NQmAMDUJgDA1CYAwNQmAMDUJgDA1CYAwNQmAMDUJgDA1CYAwNQmAMDUJgDA1CYAwNQmAMDUJ
      gDA1CYAwNQmAMDUJgDA1CYAwNQmAMDUJgDA1CYAwNWMCoAc4vHcdr7/6KivX5tFQXcGGzdvx
      BnU8jRW8/adllNd3GlK0ECfDkAA0Vx1i5Wd7mTk3h2BNEYeraygtPUpd+W5e/eP7JA6fSGpM
      iBFFC3FSDAlAV1cjNdVHWLlsOfW2OKJDHLTVHWDRkhVEDbuUWaMHymAY4pxgSAA0XSN8cBb3
      P3QfIc2FHGxso+NYI2PHZVJZuIWaNg8AHo+HqqqqnkmGSBJnmiEBsNtCUTxefIEgQb+CqivE
      j5jM7NlXMHOgj7+s3EBXEJxOJ0lJST2TtAriTDMkAHEpI5mXFcPSN94mdMgkxqSnMDhjAHaH
      m+k33UcCTZRUNhlRtBAnxZAhkhSLg9GXXcXIGRqKxYKqwIyk1BPvhnPd/FuMKFaIk2bYIHmg
      YLFajPt4IU4DuRAmTE0CIExNAiBMTQIgTE0CIExNAiBMTQIgTE0CIExNAiBMTQIgTK1PAdA0
      jfLycurq6lixYgV79uwxul5CnBF9CkB3dze5ubkUFxdjtVrZuXMnmqYZXTchDNfnXSBd1yku
      LiYtLY1AIGBknYQ4Y/p0N6jL5WLixInU19djsVjIyclBVeXwQZz/+nwMUFVVRVlZGdu2baO2
      tlYeXxQXhD4FwOv10tnZyS233MIdd9xBaWmpBEBcEPq0C2SxWGhubiY3NxeAxsZGdu7cSUZG
      BpGRkYZWUAgj9akFsFqtjBgxAr/fj67rjB07Fr/fL2eCxHmvTwFQFAWPx8P+/fvx+XxomsaU
      KVOIjo42un5CGKpPAfB4PNTW1jJq1ChSUlIoKSmRYwBxQejTMYCqqvh8PmpqatB1HZvNJn34
      iAtCn1oAu93OmDFjcDgcNDU1MWbMGKPrJcQZ0WsA2tvbycvLY+vWrSQmJpKYmEheXp7sAokL
      Qq+7QDabDafTSWRkJBaLBUVRmDVrllwJFheEXr/FiqLg9/uZMmUKfr+fgoICPB7PmaibEIb7
      zgDouk5hYSFNTU10d3dTVFTEvHnz2LBhg1wDEBeEXluAjo4OBgwYQGVlJenp6cTExBAMBs9E
      3YQw3HceAyiKQlJSElu2bKGrq4s5c+bw1VdfER8f/53HAHrQy4GCHRw4XIfmjGfq2FTqGtsY
      Nmwoemcd63YeZPS4bBIinKd9hYQ4Gb0eBKemphIWFoaiKERERKBpGrGxsd+5jL+rhY1bdpCQ
      MYroiFA8TcfYsbOchBgXn/3lz+jJ07jYaWC/vEL0Ua/fQovFQlxcXM98Wlparx/a3dZG3eEj
      KO5wOoIuksOddLVW8d67+7EmT+P+y8Zhs8hZJHH29RqAQCCA1+v9xmuqquJyub51GVtYBJde
      cwPxiRF8+slfKHJNpLGkmOgRmbTVV9HhDRIVouLxeGhsbOxZTq4tiDOt1wBUVVWxc+fOb3w5
      Q0NDmTNnzrcu4/W0U+8Jkhkfj1uBLk+Q/qNncuONs9nw0Sus+iKPW66e2jNE0tfLEuJM6jUA
      CQkJzJgxg9bWVjo7O9F1vdf7gFyucLoqP+e1HZuISh7O+PQEdvmD2FzhzL7+Dha//jFFh4cx
      Nk3uJhVnV68BcDgc6LrOqlWrqK6uJiIiAlVVyczM/NZlnGGx3HT3/fj9GhabDRVIzRh5/M3w
      FB58/KHTVX8hTkmfTsUEAgHcbjezZs3C6XRy6NAhNE3r5XYICzabDJEkzm19CoDdbic0NJSw
      sDA2btyI1SqnMMWFoddzkYFAgM7Ozp47QefMmUNqaqo8DyAuCL3+lPv9fhobG2lpaek59fld
      p0CFOJ/02gK4XC5SU1MBWLduHevXr8fhcEgLIC4Ife4XqLGxkfnz53PXXXf1HAQLcb7r8zPB
      uq5TUVHR85q0AOJC8P8B3cjBQGmmdJcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      87f/8P/PNaCXR955ZfQdzIX85Zee6ncHL8s8V4PxidDPntuPuZBtW4MbIqB4IYl/SFxqVC7L
      MOCy2BA70WDzgoAAFggIYIGAABYICGCBgAAWCAhggYAAFghoo8ulYvsPHlWk2p7dr1fEDfcr
      xjbEtTDwEU6dHclUW4igFLJWFZVLv214g4At0Ea3c9t2q90eDc9VRJLZWPEgBFugDeKjL5i7
      re58DQ1s2bG8GPmw+/Ac0xX0fAajfQwIaEP4s7/4IeYSrt0a/Ne//95lGeYTgZcwgAUCAlgg
      IIAFAgJYICCABQICWCAggAUCAlggIIAFAgJYICCABQICWCAggAUCAlggIIAFAgJYICCABQIC
      WCAggAUCAlggIIAFAgJYICCABQICWCAggAUCAlggIIAFAgJYICCABQICWCAggAUCAlggIIAF
      AgJYICCABQICWCAggAUCAlggIIAFAgJYICCABQICWCAggAUCAlggIIAFAgJYICCABQICWCAg
      gAUCAlggIIAFAgJYICCABQICWCAggAUCAlggIIAFAgJYICCABQICWCAggAUCAlggIIAFAgJY
      ICCABQICWCAggAUCAlggIIAFAgJYICCABQICWCAggAUCAlggIIAFAgJYICCABQICWCAggAUC
      AlggIIAFAgJYICCABQICWCAggAUCAlggIIAFAgJYICCABQICWCAggAUCAlggIIAFAgJYICCA
      BQICWCAggAUCAlggIIAFAgJYICCABQICWCAggAUCAlggIIDlfwHVJjc1SzsXygAAAABJRU5E
      rkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
